name: "CI-CD"

on: push

env:
  PYTHON_VERSION: 3.8

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Set Stanza version
        run: |
          echo "STANZA_VERSION=$(cat requirements.txt | grep -E -i "^stanza")" >> $GITHUB_ENV
      - name: Cache Stanzas
        uses: actions/cache@v3
        with:
          path: ~/stanza_resources
          key: ${{ runner.os }}-stanza-resources-${{ env.STANZA_VERSION }}
      - name: Set NLTK version
        run: |
          echo "NLTK_VERSION=$(cat requirements.txt | grep -E -i "^nltk")" >> $GITHUB_ENV
      - name: Cache nltk
        uses: actions/cache@v3
        with:
          path: ~/nltk_data
          key: ${{ runner.os }}-nltk-data-${{ env.NLTK_VERSION }}
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with Pytest
        run: |
          python resources_installation.py
          pytest tests --cov=. --cov-fail-under=75 --cov-report term-missing
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install pylint
      - name: Lint with Pylint
        run: |
          pylint ./**/*.py
  bump_version:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [ tests, lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [ bump_version ]
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Scaleway registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY_ENDPOINT }}
          username: userdoesnotmatter
          password: ${{ secrets.TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          push: true
          pull: true
          tags: ${{ vars.REGISTRY_ENDPOINT }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ vars.VERSION }}
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - name: Deploy container
        run: |
          python .github/deploy.py
        
